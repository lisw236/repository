                                            LNMP

LNMP
     L:Linux
     N:Nginx
     M:Mysql,MariaDB
     p:网站开发语言(PHP,Perl,Python)

                                                      部署LNMP
                                                      (动态网站)

一.安装LNMP
     1.安装软件
		-- nginx
		-- mariadb  mariadb-server  mariadb-devel
		-- php  php-fpm  php-mysql

                  备注：mariadb（数据库客户端软件）、mariadb-server（数据库服务器软件）、mariadb-devel
                        （其他客户端软件的依赖包）、php（解释器）、php-fpm（进程管理器服务）、php-mysql
                  （PHP的数据库扩展包）。
     2.启动服务
		 /usr/local/nginx/sbin/nginx               //启动nginx

		systemctl start   mariadb php-fpm         //启动两个服务器
		systemctl status  mariadb php-fpm         //查看服务状态
		systemctl enable  mariadb php-fpm         //设置开机启动
二.配置LNMP
     原理: 动静分离   fpm
       php-fpm.d/www.conf ---> ; 为注释行

    1.nginx文件配置:

   location / {
            root   html;
            index  index.php  index.html   index.htm;
        #设置默认首页为index.php，当用户在浏览器地址栏中只写域名或IP，不说访问什么页面时，服务器会把默认首
         页index.php返回给用户

   location ~ \.php$ {                          #
            root           html;
            fastcgi_pass   127.0.0.1:9000;      #将请求转发给本机9000端口，PHP解释器
            fastcgi_index  index.php;
           #fastcgi_param   SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include        fastcgi.conf;        #加载其他配置文件
        }




     2.php-fpm配置文件:
           /etc/php-fpm.d/www.conf:

		[www]
		listen = 127.0.0.1:9000            //PHP端口号
		pm.max_children = 32                //最大进程数量
		pm.start_servers = 15                //最小进程数量
		pm.min_spare_servers = 5            //最少需要几个空闲着的进程
		pm.max_spare_servers = 32            //最多允许几个进程处于空闲状态



     3.连接数据库
        可以参考lnmp_soft/php_scripts/mysql.php:

     4.重启配置

    
    5.LNMP常见问题
		Nginx的默认访问日志文件为/usr/local/nginx/logs/access.log
		Nginx的默认错误日志文件为/usr/local/nginx/logs/error.log
		PHP默认错误日志文件为/var/log/php-fpm/www-error.log
		如果动态网站访问失败，可用参考错误日志，查找错误信息。



三.地址重写

      server下:
    		rewrite regex replacement flag
    		rewrite 旧地址 新地址 [选项]                  # 旧地址支持正则
                   选项:
			last      不再读其他rewrite
			break     不再读其他语句，结束请求
			redirect  临时重定向
			permament 永久重定向

          1.  rewrite /a.html  /b.html  redirect;   #redirect:地址栏显示真正打开的网页
                                                                   可写可不写     
	    2.  rewrite  ^/(.*)$  http://www.tmooc.cn/$1;   //$1等同于\1

             3.实现curl和firefox访问相同链接返回的页面不同

                 #这里，~符号代表正则匹配，*符号代表不区分大小写
		 if ($http_user_agent ~* firefox) {         //识别客户端firefox浏览器.与日志有关
		 rewrite ^(.*)$  /firefox/$1;

	   
		










